{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[{"file_id":"1bbYGdWi_dKiB0HoLFBXxshe_0yemJtea","timestamp":1729849491574}]},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"markdown","source":["\n","\n","---\n","\n"],"metadata":{"id":"tKNG_RzWxG6g"}},{"cell_type":"markdown","source":["# **Дисклеймер**\n","\n","В данной практике будет введен дополнительный критерий: чистота и читаемость кода, а также соблюдение правил описанных в начале практики"],"metadata":{"id":"cFcrKfclKWh0"}},{"cell_type":"markdown","source":["\n","\n","---\n","\n"],"metadata":{"id":"0SnE87X1xDlV"}},{"cell_type":"markdown","source":["# Задание 1\n","\n","**Задача:**\n","\n","Напишите функцию очищающий список от дубликтов\n","\n","\n","*Запрещено:*\n","\n","*   Использовать set() или готовые функции очищающие список от дубликатов\n","\n","Вввод:\n","\n","```\n","apple banana apple 1 3 4 4 5\n","```\n","\n","\n","Вывод:\n","\n","```\n","apple banana 1 3 4 5\n","```\n","\n"],"metadata":{"id":"VxawR9NubT_F"}},{"cell_type":"code","source":["def dub_clearing(a):\n","  list1 = a.split()\n","  list2 = []\n","  string1 = ''\n","  for i in list1:\n","    if i not in list2:\n","      list2.append(i)\n","      string1 += i + ' '\n","  return string1\n","\n","\n","print(dub_clearing(input('Введите ваш список: ')))"],"metadata":{"id":"ml5gnbPXbeju","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1729850009642,"user_tz":-300,"elapsed":4758,"user":{"displayName":"Urkis","userId":"03817156391522698014"}},"outputId":"e8740c65-edfd-49b5-ba48-1d133942f704"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Введите ваш список: apple banana apple 1 3 4 4 5\n","apple banana 1 3 4 5 \n"]}]},{"cell_type":"markdown","source":["# Задание 2\n","\n","**Задача:**\n","\n","Написать функцию для нахождения простых чисел в диапазоне\n","\n","Ввод:\n","\n","```\n","10, 50\n","```\n","\n","Вывод:\n","\n","```\n","11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47\n","```"],"metadata":{"id":"y05x0eD0cVCC"}},{"cell_type":"code","source":["def isPrime(a):\n","  list1 = a.split(', ')\n","  string1 = ''\n","  for i in range(int(list1[0]),int(list1[1])+1):\n","    deli_count = 0\n","    for j in range(1,i+1):\n","      if i%j == 0:\n","        deli_count += 1\n","    if deli_count == 2:\n","      string1 += str(i) + ', '\n","  return string1[:len(string1)-2]\n","\n","\n","print(isPrime(input('Введите диапазон: ')))"],"metadata":{"id":"XSMJnLgrc6Bf","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1729850694874,"user_tz":-300,"elapsed":6397,"user":{"displayName":"Urkis","userId":"03817156391522698014"}},"outputId":"a034bfb1-3f60-4bb4-b1af-4421bd4b4b6d"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Введите диапазон: 10, 50\n","11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47\n"]}]},{"cell_type":"markdown","source":["# Задание 3\n","\n","Напишите функцию для объединения двух списков (список ключей и список значении) в словарь\n","\n","*Запрещено:*\n","\n","*   Использования готовых функции для объединения списков (пример: zip() )\n","\n","Дано:\n","\n","```\n","keys = ['a', 'b', 'c', 'e' ]\n","values = [1, 2, 3, 4]\n","```\n","\n","Вывод:\n","```\n","{'a': 1, 'b': 2, 'c': 3, 'e': 4}\n","```\n","\n","\n"],"metadata":{"id":"vYM0LyxxdElN"}},{"cell_type":"code","source":["def another_zip(keys,values):\n","  example_dict = {}\n","  for i,k in enumerate(keys):\n","    example_dict[k] = values[i]\n","  return example_dict\n","\n","\n","keys = ['a', 'b', 'c', 'e' ]\n","values = [1, 2, 3, 4]\n","print(another_zip(keys, values))"],"metadata":{"id":"CRvhHTjCdvjS","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1729850939021,"user_tz":-300,"elapsed":256,"user":{"displayName":"Urkis","userId":"03817156391522698014"}},"outputId":"630e7e33-e549-4959-fc70-a84e63e4b971"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["{'a': 1, 'b': 2, 'c': 3, 'e': 4}\n"]}]},{"cell_type":"markdown","source":["# Задание 4\n","\n","Напишите функцию(ии) для подсчета статистических параметров:\n","*   Сумму\n","*   Среднее арифметическое\n","*   Медиану\n","*   Моду\n","\n","\n","*Запрещено:*\n","\n","*   sum()\n","*   sorted()\n","*   и других функции предоставляющих готовое решение задания\n","\n","Дано:\n","\n","```\n","numbers = [1, 2, 2, 3, 4, 5, 6, 7, 8 ,9 ,10]\n","\n","```\n","\n","Вывод:\n","```\n","{'mean': 5.181818181818182, 'median': 5, 'mode': 2, 'sum': 57}\n","```\n"],"metadata":{"id":"L_w8H8i-fQcP"}},{"cell_type":"code","source":["def sorting(n_list):\n","  n2_list = []\n","  for i in range(1,len(n_list)+1):\n","    n2_list.append(min(n_list))\n","    del n_list[n_list.index(min(n_list))]\n","  return n2_list\n","\n","\n","def statistics(n_list):\n","  stat_dict = {}\n","  suma = 0\n","  for i in n_list:\n","    suma += i\n","\n","  mean = suma/len(n_list)\n","\n","  median = 0\n","  if len(n_list)%2 == 0:\n","    median = (n_list[len(n_list)] + n_list[len(n_list)+1])/2\n","  elif len(n_list)%2 != 0:\n","    median = n_list[len(n_list)//2]\n","\n","  frequency = {}\n","  mode = 0\n","  for h in n_list:\n","    if h not in frequency.keys():\n","      frequency[h] = 1\n","    else:\n","      frequency[h] += 1\n","  mode = max(frequency.items(), key = lambda x: x[1])[0]\n","\n","  stat_dict['mean'] = mean\n","  stat_dict['median'] = median\n","  stat_dict['mode'] = mode\n","  stat_dict['sum'] = suma\n","  return stat_dict\n","\n","\n","def main(n_list):\n","  sorted_list = sorting(n_list)\n","  dict1 = statistics(sorted_list)\n","  print(dict1)\n","\n","\n","n_list = [1, 2, 2, 3, 4, 5, 6, 7, 8 ,9 ,10]\n","main(n_list)"],"metadata":{"id":"dW6jW_rjfuba","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1729853159354,"user_tz":-300,"elapsed":265,"user":{"displayName":"Urkis","userId":"03817156391522698014"}},"outputId":"108658a7-a1f4-4a75-c458-3cae5bedd94f"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["{'mean': 5.181818181818182, 'median': 5, 'mode': 2, 'sum': 57}\n"]}]},{"cell_type":"markdown","source":["# Задание 5\n","\n","На ввод поступает строка символов. Строка состоит из слов, которые отделены друг от друга пробелами. Необходимо вывести самое длинное слово и его порядковый номер.\n","\n","*Запрещено:*\n","\n","*   len()\n","\n","Дано:\n","\n","```\n","Страдание и боль всегда обязательны для широкого сознания и глубокого сердца.\n","\n","```\n","\n","Вывод:\n","```\n","Самое длинное слово с номером 5: обязательны\n","```"],"metadata":{"id":"hZW0NZ7SgTcp"}},{"cell_type":"code","source":["def word_length(a):\n","  count = 0\n","  for f in a:\n","    count += 1\n","  return count\n","\n","\n","def longest_word(str_list):\n","  word_l = {}\n","  str_list = str_list.replace(',','').replace('.','')\n","  str_list = str_list.replace('!','').replace('?','').split()\n","  for i in str_list:\n","    if i not in word_l.keys():\n","      word_l[i] = (str_list.index(i)+1,word_length(i))\n","\n","  maxi = max(word_l.items(), key = lambda x: x[1][1])[0]\n","  m_index = max(word_l.items(), key = lambda x: x[1][1])[1][0]\n","\n","  print(f'Самое длинное слово с номером {m_index}: {maxi}')\n","\n","\n","longest_word(input('Введите ваш текст: '))"],"metadata":{"id":"rC5DpHHLsDYp","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1729855648316,"user_tz":-300,"elapsed":1963,"user":{"displayName":"Urkis","userId":"03817156391522698014"}},"outputId":"c16d4b21-6f29-4cb1-a8a4-ea6d31e840ae"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Введите ваш текст: Страдание и боль всегда обязательны для широкого сознания и глубокого сердца.\n","Самое длинное слово с номером 5: обязательны\n"]}]},{"cell_type":"markdown","source":["# Задание 6\n","\n","Напишите программу, для управления оценками студентов, со следующими функциями:\n","\n","* Добавление информации о студенте и его оценках.\n","* Подсчет среднего балла студента.\n","* Получение списка всех студентов с их средними баллами.\n","* Поиск студента по имени и вывод его оценок и среднего балла.\n","\n","\n","\n"],"metadata":{"id":"k5BzJW5ZeaQN"}},{"cell_type":"code","source":["def add_infoSt(students):\n","  st = input('У какого студента хотите изменить информацию? ')\n","  inp = input('Какую информацию хотите изменить? ')\n","  if inp == 'О студенте':\n","    print('Текущая информация: '+ students[st]['about'])\n","    ab = input('Что хотите добавить?')\n","    students[st]['about'] += ab\n","    print('Успешно!')\n","  elif inp == 'Оценки':\n","    print('Текущие оценки: '+students[st]['marks'])\n","    ab = input('Какие оценки хотите добавить?')\n","    students[st]['marks'] += ab+', '\n","    print('Успешно!')\n","\n","\n","def ave_rait(students):\n","  st = input('У какого студента хотите узнать средний балл? ')\n","  marks = students[st]['marks'].split(', ')\n","  del marks[len(marks)-1]\n","  suma = 0\n","  mean = 0\n","  for i in marks:\n","      suma += int(i)\n","  if len(marks) != 0:\n","      mean = suma/len(marks)\n","  return mean\n","\n","\n","def all_studentsR(students):\n","  list1 = {}\n","  for i in students.items():\n","    marks = students[i[0]]['marks'].split(', ')\n","    del marks[len(marks)-1]\n","    suma = 0\n","    mean = 0\n","    for k in marks:\n","      suma += int(k)\n","    if len(marks) != 0:\n","      mean = suma/len(marks)\n","    list1[i[0]] = mean\n","  print(list1)\n","\n","\n","def search(students):\n","  st = input('О каком студенте хотите узнать информацию? ')\n","  marks = students[st]['marks'].split(', ')\n","  del marks[len(marks)-1]\n","  suma = 0\n","  mean = 0.0\n","  for i in marks:\n","    suma += int(i)\n","  if len(marks) != 0:\n","      mean = suma/len(marks)\n","  print('Текущие оценки: '+students[st]['marks']+'\\nСредний балл: '+str(mean))\n","  #print(marks)\n","\n","\n","students = {'Василий П.':{'about':'', 'marks':''},'Юлия М.':{'about':'', 'marks':''},'Мария С.':{'about':'', 'marks':''},'Никита Р.':{'about':'', 'marks':''}}\n","while True:\n","  a = input('Что хотите сделать? ')\n","  if a == 'Ничего':\n","    break\n","  elif a == 'Изменить информацию':\n","    add_infoSt(students)\n","  elif a == 'Средний балл':\n","    print(ave_rait(students))\n","  elif a == 'Список всех студентов':\n","    all_studentsR(students)\n","  elif a == 'Узнать информацию':\n","    search(students)\n","  else:\n","    print('Неверная команда')"],"metadata":{"id":"cvhlltVbdyoL","colab":{"base_uri":"https://localhost:8080/","height":495},"executionInfo":{"status":"error","timestamp":1730223032945,"user_tz":-300,"elapsed":40439,"user":{"displayName":"Urkis","userId":"03817156391522698014"}},"outputId":"de80e504-8d96-4310-eded-c9095f6c209e"},"execution_count":14,"outputs":[{"output_type":"stream","name":"stdout","text":["Что хотите сделать? Узнать информацию \n","Неверная команда\n","Что хотите сделать? Узнать информацию\n","О каком студенте хотите узнать информацию? Василий П.\n","Текущие оценки: \n","Средний балл: 0.0\n"]},{"output_type":"error","ename":"KeyboardInterrupt","evalue":"Interrupted by user","traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mKeyboardInterrupt\u001b[0m                         Traceback (most recent call last)","\u001b[0;32m<ipython-input-14-a01554d94afb>\u001b[0m in \u001b[0;36m<cell line: 59>\u001b[0;34m()\u001b[0m\n\u001b[1;32m     58\u001b[0m \u001b[0mstudents\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0;34m{\u001b[0m\u001b[0;34m'Василий П.'\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m{\u001b[0m\u001b[0;34m'about'\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m''\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m'marks'\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m''\u001b[0m\u001b[0;34m}\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m'Юлия М.'\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m{\u001b[0m\u001b[0;34m'about'\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m''\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m'marks'\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m''\u001b[0m\u001b[0;34m}\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m'Мария С.'\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m{\u001b[0m\u001b[0;34m'about'\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m''\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m'marks'\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m''\u001b[0m\u001b[0;34m}\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m'Никита Р.'\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m{\u001b[0m\u001b[0;34m'about'\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m''\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m'marks'\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m''\u001b[0m\u001b[0;34m}\u001b[0m\u001b[0;34m}\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     59\u001b[0m \u001b[0;32mwhile\u001b[0m \u001b[0;32mTrue\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m---> 60\u001b[0;31m   \u001b[0ma\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0minput\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m'Что хотите сделать? '\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m     61\u001b[0m   \u001b[0;32mif\u001b[0m \u001b[0ma\u001b[0m \u001b[0;34m==\u001b[0m \u001b[0;34m'Ничего'\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     62\u001b[0m     \u001b[0;32mbreak\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.10/dist-packages/ipykernel/kernelbase.py\u001b[0m in \u001b[0;36mraw_input\u001b[0;34m(self, prompt)\u001b[0m\n\u001b[1;32m    849\u001b[0m                 \u001b[0;34m\"raw_input was called, but this frontend does not support input requests.\"\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    850\u001b[0m             )\n\u001b[0;32m--> 851\u001b[0;31m         return self._input_request(str(prompt),\n\u001b[0m\u001b[1;32m    852\u001b[0m             \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_parent_ident\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    853\u001b[0m             \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_parent_header\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.10/dist-packages/ipykernel/kernelbase.py\u001b[0m in \u001b[0;36m_input_request\u001b[0;34m(self, prompt, ident, parent, password)\u001b[0m\n\u001b[1;32m    893\u001b[0m             \u001b[0;32mexcept\u001b[0m \u001b[0mKeyboardInterrupt\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    894\u001b[0m                 \u001b[0;31m# re-raise KeyboardInterrupt, to truncate traceback\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 895\u001b[0;31m                 \u001b[0;32mraise\u001b[0m \u001b[0mKeyboardInterrupt\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m\"Interrupted by user\"\u001b[0m\u001b[0;34m)\u001b[0m \u001b[0;32mfrom\u001b[0m \u001b[0;32mNone\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    896\u001b[0m             \u001b[0;32mexcept\u001b[0m \u001b[0mException\u001b[0m \u001b[0;32mas\u001b[0m \u001b[0me\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    897\u001b[0m                 \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mlog\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mwarning\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m\"Invalid Message:\"\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mexc_info\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;32mTrue\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;31mKeyboardInterrupt\u001b[0m: Interrupted by user"]}]},{"cell_type":"markdown","source":["# Задание 7\n","\n","\n","**Задача:**\n","\n","Создайте приложение-викторину с командной строкой, которое задает пользователям вопросы по различным темам и отслеживает их результаты.\n","\n","Ключевые особенности:\n","\n","*   Хранение данных о вопросах и ответах на них, а также баллов за каждый вопрос\n","*   Реализуйте функцию для представления вопросов, принятия ответов пользователей и предоставления обратной связи о том, являются ли ответы правильными или неправильными.\n","*  После завершения викторины отобразите общий балл пользователя из числа ответов на вопросы.\n","*  Реализуйте функцию добавления нового вопроса\n","*  Реализуйте функцию перемешивания вопросов, для отображения случайного вопроса\n"],"metadata":{"id":"iQ8Z-7PYgu1_"}},{"cell_type":"code","source":["questions = {\"Что такое Google Colab?\": {\n","        \"answers\": [\"a) Облачная среда для машинного обучения\", \"b) Текстовый редактор\", \"c) Социальная сеть\"],\n","        \"correct_answer\": \"a\",\n","        \"points\": 1\n","    },\n","    \"Какой язык программирования чаще всего используется в Google Colab?\": {\n","        \"answers\": [\"a) Java\", \"b) Python\", \"c) C++\"],\n","        \"correct_answer\": \"b\",\n","        \"points\": 2\n","    }\n","}\n","print(list(questions.keys())[0])"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"vAg7JpDuZ6cl","executionInfo":{"status":"ok","timestamp":1730224338290,"user_tz":-300,"elapsed":332,"user":{"displayName":"Urkis","userId":"03817156391522698014"}},"outputId":"ffdf04cc-b883-4450-e0fe-f800cc312ce4"},"execution_count":29,"outputs":[{"output_type":"stream","name":"stdout","text":["Что такое Google Colab?\n"]}]},{"cell_type":"code","source":["import random\n","\n","# Хранение данных о вопросах, ответах и баллах\n","questions = {\"Что такое Google Colab?\": {\n","        \"answers\": [\"a) Облачная среда для машинного обучения\", \"b) Текстовый редактор\", \"c) Социальная сеть\"],\n","        \"correct_answer\": \"a\",\n","        \"points\": 1\n","    },\n","    \"Какой язык программирования чаще всего используется в Google Colab?\": {\n","        \"answers\": [\"a) Java\", \"b) Python\", \"c) C++\"],\n","        \"correct_answer\": \"b\",\n","        \"points\": 2\n","    }\n","}\n","\n","\n","# Функция для отображения общего балла\n","def display_score(score):\n","    print(f\"Ваш общий балл: {score}\")\n","\n","\n","# Функция для добавления нового вопроса\n","'''def add_question():\n","    question = input(\"Введите вопрос: \")\n","    answers = []\n","    for i in range(3):  # Предполагается 3 варианта ответа\n","        answer = input(f\"Введите вариант ответа {chr(ord('a') + i)}: \")\n","        answers.append(answer)\n","    correct_answer = input(\"Введите правильный ответ (a, b, c): \")\n","    points = int(input(\"Введите количество баллов за вопрос: \"))\n","    questions[question] = {\n","        \"answers\": answers,\n","        \"correct_answer\": correct_answer,\n","        \"points\": points\n","    }\n","    print(\"Вопрос добавлен!\")'''\n","\n","\n","# Функция для перемешивания вопросов\n","def shuffle_questions(questions):\n","    question_list = list(questions.keys())\n","    random.shuffle(question_list)\n","    shuffled_questions = {}\n","    for question in question_list:\n","        shuffled_questions[question] = questions[question]\n","    return shuffled_questions\n","\n","\n","# Функция для представления вопроса, принятия ответа и обратной связи\n","def ask_question(questions):\n","    print('Вопрос: '+question)\n","    for answer in questions[\"answers\"]:\n","        print(answer)\n","    user_answer = input(\"Ваш ответ: \")\n","    if user_answer.lower() == questions[\"correct_answer\"]:\n","        print(\"Верно!\")\n","        return questions[\"points\"]\n","    else:\n","        print(\"Неверно.\")\n","        return 0\n","\n","\n","# Основной цикл викторины\n","score = 0\n","shuffled_questions = shuffle_questions(questions) # Перемешиваем вопросы перед началом игры\n","for question in shuffled_questions:\n","    score += ask_question(shuffled_questions[question])\n","display_score(score)"],"metadata":{"id":"DhxyYwHwh2V4","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1730224737320,"user_tz":-300,"elapsed":27443,"user":{"displayName":"Urkis","userId":"03817156391522698014"}},"outputId":"75042b8a-1e90-4bac-a6a1-c219dce53def"},"execution_count":34,"outputs":[{"output_type":"stream","name":"stdout","text":["Вопрос: Что такое Google Colab?\n","a) Облачная среда для машинного обучения\n","b) Текстовый редактор\n","c) Социальная сеть\n","Ваш ответ: a\n","Верно!\n","Вопрос: Какой язык программирования чаще всего используется в Google Colab?\n","a) Java\n","b) Python\n","c) C++\n","Ваш ответ: b\n","Верно!\n","Ваш общий балл: 3\n"]}]}]}